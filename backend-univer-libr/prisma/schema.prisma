generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  password String

  isAdmin Boolean @default(false) @map("is_admin")

  name  String @unique
  phone String @default("")

  orders Order[]

  @@map("user")
}

model Book {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  author String @unique
  slug   String @unique
  title  String

  orderItems OrderItem[]

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?      @map("category_id")

  discipline   Discipline? @relation(fields: [disciplineId], references: [id])
  disciplineId Int?        @map("discipline_id")

  speciality   Speciality? @relation(fields: [specialityId], references: [id])
  specialityId Int?        @map("speciality_id")

  @@map("book")
}

model Discipline {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String @unique
  slug String @unique

  books Book[]

  @@map("discipline")
}

model Speciality {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String @unique
  slug String @unique

  books Book[]

  @@map("speciality")
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String @unique
  slug String @unique

  books Book[]

  @@map("category")
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  items OrderItem[]

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  @@map("order")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  quantity Int
  order    Order? @relation(fields: [orderId], references: [id])
  orderId  Int?   @map("order_id")

  book   Book? @relation(fields: [bookId], references: [id])
  bookId Int   @map("book_id")

  @@map("order_item")
}
